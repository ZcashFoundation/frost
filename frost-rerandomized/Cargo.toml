[package]
name = "frost-rerandomized"
edition.workspace = true
version.workspace = true
authors.workspace = true
readme = "README.md"
license.workspace = true
repository.workspace = true
categories.workspace = true
keywords = ["cryptography", "threshold", "signature", "schnorr", "randomized"]
description = "Types and traits to support implementing a re-randomized variant of Flexible Round-Optimized Schnorr Threshold signature schemes (FROST)."

[package.metadata.docs.rs]
features = ["serde"]
rustdoc-args = ["--cfg", "docsrs"]

[dependencies]
derive-getters = "0.5.0"
document-features.workspace = true
frost-core = { path = "../frost-core", version = "2.1.0", features = [
    "internals"
], default-features = false }
hex.workspace = true
rand_core.workspace = true

[dev-dependencies]

[features]
nightly = []
default = ["serialization", "cheater-detection"]
#! ## Features
## Enable standard library support.
std = ["frost-core/std"]
## Enable `serde` support for types that need to be communicated. You
## can use `serde` to serialize structs with any encoder that supports
## `serde` (e.g. JSON with `serde_json`).
serde = ["frost-core/serde"]
# Exposes ciphersuite-generic tests for other crates to use
test-impl = ["frost-core/test-impl", "serialization"]
## Enable cheater detection
cheater-detection = ["frost-core/cheater-detection"]
## Enable a default serialization format. Enables `serde`.
serialization = ["serde", "frost-core/serialization"]
